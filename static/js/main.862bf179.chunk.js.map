{"version":3,"sources":["humanStandardTokenABI.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["humanStandardTokenABI","constant","inputs","name","outputs","type","payable","anonymous","indexed","App","props","relevantTokens","state","web3","undefined","accountAddress","isLoaded","ethBalance","allTokens","tokenBalances","tokenPrices","window","ethereum","balance","this","utils","fromWei","setState","console","error","token","request","method","accounts","Web3","eth","getBalance","then","updateEthBalance","bind","forEach","tokenContractAddress","address","Contract","methods","balanceOf","call","updateTokenBalance","fetchTokenPrice","price","tokenAddress","fetch","res","json","results","Object","values","tokens","i","array","symbol","positionSizeUSD","currencyFormat","format","amountFormat","className","isMetamaskInstalled","onClick","connectToMetaMask","length","map","renderTokenBalance","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.862bf179.chunk.js","sourcesContent":["const humanStandardTokenABI = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        name: \"success\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        name: \"success\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"success\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n      },\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"remaining\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"_spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        name: \"_initialAmount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_tokenName\",\n        type: \"string\",\n      },\n      {\n        name: \"_decimalUnits\",\n        type: \"uint8\",\n      },\n      {\n        name: \"_tokenSymbol\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    type: \"constructor\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_extraData\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"approveAndCall\",\n    outputs: [\n      {\n        name: \"success\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"version\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n];\nexport default humanStandardTokenABI;\n","import React from \"react\";\nimport Web3 from \"web3\";\nimport humanStandardTokenABI from \"./humanStandardTokenABI\";\nimport { format } from \"d3-format\";\nimport \"./App.css\";\n\ninterface Token {\n  symbol: string;\n  name: string;\n  address: string;\n  decimals: number;\n  logoURI: string;\n}\n\ninterface AppState {\n  web3?: Web3;\n  accountAddress?: string;\n  isLoaded: boolean;\n  ethBalance?: string;\n  // keys are the token names\n  allTokens: Record<string, Token>;\n  tokenBalances: Record<string, string>;\n  tokenPrices: Record<string, string>;\n}\n\ndeclare global {\n  interface Window {\n    ethereum: any;\n  }\n}\n\nclass App extends React.Component<any, AppState> {\n  relevantTokens = [\n    \"DAI\",\n    \"LINK\",\n    \"UNI\",\n    \"AAVE\",\n    \"SUSHI\",\n    \"SNX\",\n    \"COMP\",\n    \"ZRX\",\n    \"FTM\",\n    \"MIR\",\n    \"1INCH\",\n  ] as Array<string>;\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      web3: undefined,\n      accountAddress: undefined,\n      isLoaded: false,\n      ethBalance: undefined,\n      allTokens: {},\n      tokenBalances: {},\n      tokenPrices: {},\n    };\n  }\n\n  isMetamaskInstalled() {\n    return typeof window.ethereum !== \"undefined\";\n  }\n\n  updateEthBalance(balance: any) {\n    if (this.state.web3) {\n      const ethBalance = this.state.web3.utils.fromWei(balance);\n      this.setState({ ethBalance });\n    } else {\n      console.error(\"web3 is not yet initialized\");\n    }\n  }\n\n  updateTokenBalance(token: string, balance: any) {\n    if (this.state.web3) {\n      const { tokenBalances, web3 } = this.state;\n      tokenBalances[token] = web3.utils.fromWei(balance);\n      this.setState({ tokenBalances });\n    } else {\n      console.error(\"web3 is not yet initialized\");\n    }\n  }\n\n  async connectToMetaMask() {\n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    const accountAddress = accounts[0];\n    const web3 = new Web3(window.ethereum);\n    this.setState({ web3, accountAddress });\n    web3.eth.getBalance(accountAddress).then(this.updateEthBalance.bind(this));\n    this.relevantTokens.forEach((token: string) => {\n      const tokenContractAddress = this.state.allTokens[token].address;\n      const tokenPromise = new web3.eth.Contract(\n        humanStandardTokenABI as any,\n        tokenContractAddress\n      );\n      tokenPromise.methods\n        .balanceOf(accountAddress)\n        .call()\n        .then((balance: any) => {\n          this.updateTokenBalance(token, balance);\n        });\n      this.fetchTokenPrice(tokenContractAddress).then((price) => {\n        const { tokenPrices } = this.state;\n        tokenPrices[token] = price;\n        this.setState({ tokenPrices });\n      });\n    });\n  }\n\n  async fetchTokenPrice(tokenAddress: string): Promise<string> {\n    return fetch(\n      `https://api.coingecko.com/api/v3/simple/token_price/ethereum?contract_addresses=${tokenAddress}&vs_currencies=usd`\n    )\n      .then((res) => res.json())\n      .then((results) => {\n        const price = Object.values(results)[0] as any;\n        return price[\"usd\"];\n      });\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.1inch.exchange/v2.0/tokens\")\n      .then((res) => res.json())\n      .then((results) => {\n        const allTokens = {} as Record<string, Token>;\n        Object.values(results.tokens).forEach(\n          (token: any, i: number, array: any) => {\n            allTokens[token.symbol] = token as Token;\n          }\n        );\n        this.setState({\n          isLoaded: true,\n          allTokens: allTokens,\n        });\n      });\n  }\n\n  renderTokenBalance(token: Token) {\n    const { tokenBalances, tokenPrices } = this.state;\n    const symbol = token.symbol;\n    const balance = +tokenBalances[symbol];\n    const price = +tokenPrices[symbol];\n    const positionSizeUSD = price * balance;\n    const currencyFormat = format(\"$,.2f\");\n    const amountFormat = format(\".2f\");\n    if (balance) {\n      return (\n        <tr key={symbol}>\n          <td className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n            {symbol}\n          </td>\n          <td className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n            {amountFormat(balance)}\n          </td>\n          <td className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n            {currencyFormat(price)}\n          </td>\n          <td className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n            {currencyFormat(positionSizeUSD)}\n          </td>\n        </tr>\n      );\n    }\n  }\n\n  render() {\n    if (!this.state) {\n      return <div>Loading...</div>;\n    }\n    const { allTokens, ethBalance, accountAddress, tokenBalances } = this.state;\n    const amountFormat = format(\".2f\");\n    return (\n      <div className=\"min-h-screen bg-gray-100 py-6 flex flex-col justify-center sm:py-12\">\n        <div className=\"relative py-3 sm:max-w-xl sm:mx-auto\">\n          <div className=\"absolute inset-0 bg-gradient-to-r from-cyan-400 to-light-blue-500 shadow-lg transform -skew-y-6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl\"></div>\n          <div className=\"relative px-4 py-10 bg-white shadow-lg sm:rounded-3xl sm:p-20\">\n            <div className=\"max-w-md mx-auto\">\n              <div className=\"divide-y divide-gray-200\">\n                <div className=\"py-8 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  <h1 className=\"text-3xl font-extrabold text-gray-900 tracking-tight\">\n                    Deephy\n                  </h1>\n                  <p>\n                    Get a detailed balance of your DeFi tokens and get an\n                    account overview. Click the button below to get started.\n                  </p>\n                  {this.isMetamaskInstalled() && !this.state.web3 && (\n                    <button\n                      onClick={this.connectToMetaMask.bind(this)}\n                      className=\"text-white mt-auto bg-emerald-800 bg-opacity-50 hover:bg-opacity-75 transition-colors duration-200 rounded-xl font-semibold py-2 px-4 inline-flex\"\n                    >\n                      Connect to MetaMask\n                    </button>\n                  )}\n                  {accountAddress && (\n                    <p>\n                      Address:{\" \"}\n                      <code>\n                        <small>{accountAddress}</small>\n                      </code>\n                    </p>\n                  )}\n                  {Object.values(tokenBalances).length > 0 && (\n                    <div>\n                      <table className=\"table-auto\">\n                        <thead className=\"bg-indigo-200\">\n                          <tr>\n                            <th className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n                              Token\n                            </th>\n                            <th className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n                              Amount\n                            </th>\n                            <th className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n                              Current price\n                            </th>\n                            <th className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n                              Equity\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {ethBalance && (\n                            <tr>\n                              <td className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n                                ETH\n                              </td>\n                              <td className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n                                {amountFormat(+ethBalance)}\n                              </td>\n                              <td className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n                                $0.00\n                              </td>\n                              <td className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n                                $0.00\n                              </td>\n                            </tr>\n                          )}\n                          {Object.values(allTokens).map(\n                            this.renderTokenBalance.bind(this)\n                          )}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}