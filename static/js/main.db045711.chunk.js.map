{"version":3,"sources":["chain.ts","api/util.ts","images/copy.svg","constants.ts","components/tokenTableRow.tsx","components/accountDetails.tsx","browserUtil.ts","components/landing.tsx","images/discord.svg","images/github.svg","images/logo.svg","images/twitter.svg","components/footerComponent.tsx","components/themeSelector.tsx","components/navigationComponent.tsx","api/providers/accountCacheProvider.ts","api/providers/metamaskProvider.ts","churrasapiClient.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Network","Chain","format","throwError","errorMessage","Error","ensure","fn","any","arr","Array","isArray","length","isChainSupported","chain","ETHEREUM_MAINNET","BSC_MAINNET","fetchJson","url","a","debug","log","fetch","res","json","ethers","getDefaultProvider","etherscan","alchemy","JsonRpcProvider","chainId","name","TokenTableRow","token","this","props","symbol","isEthereum","network","ETHEREUM","networkPillColor","currencyFormat","amountFormat","equity","className","src","logoURI","alt","balance","price","React","Component","Alert","elevation","variant","AccountDetails","state","isLoadingTokens","sortOrder","sortDirection","walletTokens","snackbarOpen","accountAddress","accountCacheProvider","apiClient","console","setState","accountTokens","update","route","match","params","tokens","get","loadAccount","updatedTokens","filter","wt","reduce","acc","target","newSortorder","innerText","toLowerCase","event","reason","columns","quantity","value","shorthandAddress","address","prefix","substring","suffix","addressShorthand","ClipboardJS","on","e","sortKey","accountSize","determineUSDAccountSize","_","sortBy","t","sortedTokens","reverse","CircularProgress","color","formatValue","data-clipboard-text","title","id","Copy","Snackbar","open","autoHideDuration","onClose","handleCloseSnackbar","bind","severity","Object","keys","map","col","scope","onClick","sortTableBy","currentTarget","navigateTo","href","window","location","Landing","metaMaskProvider","requestAccounts","accounts","isMetaMaskInstalled","isUnsupportedChain","showConnectToMetamaskButton","connectToMetaMask","FooterComponent","Logo","width","height","rel","GithubLogo","TwitterLogo","DiscordLogo","ThemeSelector","darkModeToggle","lightModeToggle","createRef","updateClassList","localStorage","theme","matchMedia","matches","current","classList","contains","add","remove","document","documentElement","isSetToDarkMode","viewBox","xmlns","ref","toggleOption","d","fillRule","clipRule","NavigationComponent","AccountCacheProvider","storage","JSON","parse","churrasCache","getCache","addresses","stringify","DefaultMetaMaskProvider","ethereum","request","method","UNKNOWN","parseInt","ChainId","MAINNET","ROPSTEN","RINKEBY","GÖRLI","KOVAN","ETHEREUM_TESTNET","BSC_TESTNET","includes","DefaultChurrasApiClient","apiBaseUrl","hostname","environment","API_PORT","protocol","endpoint","App","getSingleAccountAddress","hash","StrictMode","path","render","defaultProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.db045711.chunk.js","sourcesContent":["export enum Network {\n  ETHEREUM,\n  BSC,\n}\n\nexport enum Chain {\n  ETHEREUM_MAINNET,\n  ETHEREUM_TESTNET,\n  BSC_MAINNET,\n  BSC_TESTNET,\n  UNKNOWN,\n}\n","import { format } from \"d3-format\";\nimport debug from \"debug\";\nimport fetch from \"node-fetch\";\nimport { Chain } from \"../chain\";\n\nexport const percentFormat = format(\".2%\");\nexport const currencyFormat = format(\"($.2f\");\n\nexport function throwError(errorMessage: string): never {\n  throw new Error(errorMessage);\n}\n\nexport function ensure<T>(\n  fn: () => T,\n  errorMessage: string = \"Failed assertion\"\n): T {\n  return fn() ?? throwError(errorMessage);\n}\n\nexport function ensureValue<T>(\n  val: T | undefined,\n  errorMessage: string = \"Failed assertion\"\n): T {\n  return val ?? throwError(errorMessage);\n}\n\n// returns true if the provided array is not empty\nexport function any<T>(arr: T[]): boolean {\n  return Array.isArray(arr) && arr.length > 0;\n}\n\nexport function none<T>(arr: T[]): boolean {\n  return Array.isArray(arr) && arr.length === 0;\n}\n\nexport function isChainSupported(chain: number): boolean {\n  // For now only Ethereum Mainnet supported\n  return chain === Chain.ETHEREUM_MAINNET || chain === Chain.BSC_MAINNET;\n}\n\nexport function addressShorthand(address: string): string {\n  const length = address.length;\n  const prefix = address.substring(0, 6);\n  const suffix = address.substring(length - 4, length);\n  return `${prefix}...${suffix}`;\n}\n\nexport async function fetchJson(url: string): Promise<any> {\n  const log = debug(\"churras:fetch\");\n  log(`Fetching ${url}`);\n  const res = await fetch(url);\n  return await res.json();\n}\n","export default __webpack_public_path__ + \"static/media/copy.c93a81dd.svg\";","import { JsonRpcProvider } from \"@ethersproject/providers\";\nimport { ethers } from \"ethers\";\n\n// tokens with total USD amount below this threshold will not be displayed\nexport const MIN_DISPLAY_AMOUNT = 0.05;\nexport const ETHERSCAN_API_KEY = \"5E9AEFB4BCJZ71MGI2CZV8NP3CF9FM8Q2H\";\nexport const INFURA_API_KEY = \"3622ba9a27fe4e389875cd9c3e55670d\";\nexport const BSCSCAN_API_KEY = \"MAK2G8HSHDQEICD71FZ6A8125UTG2GAIT6\";\nexport const DEV_API_PORT = 4000;\nconst ALCHEMY_API_KEY = \"hFVzUX3b0LBuuGVTg6xU-RKxkHyND6ND\";\nexport const DEFAULT_ETHEREUM_PROVIDER = ethers.getDefaultProvider(\n  \"homestead\",\n  {\n    etherscan: ETHERSCAN_API_KEY,\n    alchemy: ALCHEMY_API_KEY,\n  }\n);\nexport const DEFAULT_BSC_PROVIDER = new JsonRpcProvider(\n  \"https://bsc-dataseed1.defibit.io/\",\n  {\n    chainId: 56,\n    name: \"bsc-mainnet\",\n  }\n);\n","import { format } from \"d3-format\";\nimport React from \"react\";\nimport { Network } from \"../chain\";\nimport { MIN_DISPLAY_AMOUNT } from \"../constants\";\nimport { WalletToken } from \"../api/token/walletToken\";\n\ninterface TokenTableRowProps {\n  token: WalletToken;\n}\n\nexport default class TokenTableRow extends React.Component<\n  TokenTableRowProps,\n  any\n> {\n  render() {\n    const { token } = this.props;\n    const symbol = token.symbol;\n    // total token amount in USD\n    const isEthereum = token.network === Network[Network.ETHEREUM];\n    const network = isEthereum ? \"Ethereum\" : \"BSC\";\n    const networkPillColor = isEthereum\n      ? \"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\"\n      : \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-400\";\n    const currencyFormat = format(\"$,.2f\");\n    const amountFormat = format(\",.2f\");\n    // do not display row if amount is not more than $5 cents\n    if (token.equity > MIN_DISPLAY_AMOUNT) {\n      return (\n        <tr key={symbol}>\n          <td className=\"px-6 py-4 whitespace-nowrap\">\n            <div className=\"flex items-center\">\n              <div className=\"ml-4\">\n                <div className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\n                  <img\n                    src={token.logoURI}\n                    alt={token.name}\n                    className=\"w-5 mr-2 float-left\"\n                  />\n                  {symbol}\n                </div>\n              </div>\n            </div>\n          </td>\n          <td className=\"px-6 py-4 whitespace-nowrap\">\n            <span\n              className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${networkPillColor}`}\n            >\n              {network}\n            </span>\n          </td>\n          <td className=\"px-6 py-4 whitespace-nowrap\">\n            <div className=\"text-sm text-gray-900 dark:text-gray-100\">\n              {amountFormat(token.balance)}\n            </div>\n          </td>\n          <td className=\"px-6 py-4 whitespace-nowrap\">\n            <div className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\n              {currencyFormat(token.price)}\n            </div>\n          </td>\n          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-100\">\n            {currencyFormat(token.equity)}\n          </td>\n        </tr>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n","import { CircularProgress, Snackbar } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport AnimatedNumber from \"animated-number-react\";\nimport ClipboardJS from \"clipboard\";\nimport { format } from \"d3-format\";\nimport _ from \"lodash\";\nimport React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport AccountCacheProvider from \"../api/providers/accountCacheProvider\";\nimport { MetaMaskProvider } from \"../api/providers/metamaskProvider\";\nimport { WalletToken } from \"../api/token/walletToken\";\nimport { addressShorthand, any, isChainSupported, none } from \"../api/util\";\nimport { Chain } from \"../chain\";\nimport { ChurrasApiClient } from \"../churrasapiClient\";\nimport Copy from \"../images/copy.svg\";\nimport TokenTableRow from \"./tokenTableRow\";\n\nexport type RoutePropsParams = { accountAddress: string };\n\ninterface AccountDetailsProps {\n  accountCacheProvider: AccountCacheProvider;\n  metaMaskProvider: MetaMaskProvider;\n  route: RouteComponentProps<RoutePropsParams>;\n  chain: Chain;\n  apiClient: ChurrasApiClient;\n}\n\ninterface AccountDetailsState {\n  sortOrder: string;\n  sortDirection: string;\n  isLoadingTokens: boolean;\n  walletTokens: WalletToken[];\n  snackbarOpen: boolean;\n}\n\nfunction Alert(props: any) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default class AccountDetails extends React.Component<\n  AccountDetailsProps,\n  AccountDetailsState\n> {\n  constructor(props: AccountDetailsProps) {\n    super(props);\n    this.state = {\n      isLoadingTokens: false,\n      sortOrder: \"token\",\n      sortDirection: \"asc\", // asc or desc\n      walletTokens: [],\n      snackbarOpen: false,\n    };\n  }\n  private async loadAccount(accountAddress: string) {\n    const { accountCacheProvider, chain, apiClient } = this.props;\n    if (!isChainSupported(chain)) {\n      console.log(`Unsupported chain ${Chain[chain]}`);\n      return;\n    } else {\n      this.setState({ isLoadingTokens: true });\n      const walletTokens = await apiClient.accountTokens(accountAddress);\n      accountCacheProvider.update(accountAddress, walletTokens);\n      this.setState({\n        walletTokens: walletTokens,\n        isLoadingTokens: false,\n      });\n    }\n  }\n\n  async componentDidMount() {\n    const { accountCacheProvider, route, apiClient } = this.props;\n    const accountAddress = route.match.params.accountAddress;\n    const tokens = accountCacheProvider.get(accountAddress);\n    if (none(tokens)) {\n      // We already have the user account address but wallet tokens is empty, so we'll make\n      // an attempt to load them.\n      this.loadAccount(accountAddress);\n    } else {\n      // we already have tokens, update the state first and then refresh prices in the background\n      this.setState({ walletTokens: tokens });\n      const updatedTokens = await apiClient.accountTokens(accountAddress);\n      // console.log(await accountSnapshot.loadYieldFarms(accountAddress));\n      this.setState({ walletTokens: updatedTokens });\n      accountCacheProvider.update(accountAddress, updatedTokens);\n    }\n  }\n\n  /* Returns the total account size in USD */\n  determineUSDAccountSize(): number {\n    const { walletTokens, isLoadingTokens } = this.state;\n    if (isLoadingTokens) {\n      return 0;\n    } else {\n      return walletTokens\n        .filter((wt) => wt.price && wt.balance)\n        .reduce((acc, wt) => acc + +wt.price * +wt.balance, 0);\n    }\n  }\n\n  sortTableBy(target: HTMLElement) {\n    const { sortOrder, sortDirection } = this.state;\n    const newSortorder = target.innerText.toLowerCase();\n    if (sortOrder === newSortorder) {\n      // if the new sort order is the same as the previous one, just invert the direction\n      this.setState({\n        sortDirection: sortDirection === \"asc\" ? \"desc\" : \"asc\",\n      });\n    }\n    this.setState({ sortOrder: newSortorder });\n  }\n\n  handleCloseSnackbar(event: any, reason: string) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({ snackbarOpen: false });\n  }\n\n  render() {\n    if (!this.state) {\n      return <div>Loading...</div>;\n    }\n    const columns = {\n      token: \"symbol\",\n      network: \"network\",\n      quantity: \"balance\",\n      price: \"price\",\n      value: \"equity\",\n    } as Record<string, string>;\n    const { route } = this.props;\n    const accountAddress = route.match.params.accountAddress;\n    const shorthandAddress = addressShorthand(accountAddress);\n    const clipboard = new ClipboardJS(\"#copy\");\n    clipboard.on(\"success\", (e) => {\n      this.setState({ snackbarOpen: true });\n    });\n    const {\n      walletTokens,\n      isLoadingTokens,\n      sortOrder,\n      sortDirection,\n      snackbarOpen,\n    } = this.state;\n    const sortKey = columns[sortOrder];\n    const currencyFormat = format(\"$,.2f\");\n    const accountSize = this.determineUSDAccountSize();\n    const tokens = _.sortBy(\n      walletTokens,\n      (t) => (t as Record<string, any>)[sortKey] as any\n    );\n    const sortedTokens = sortDirection === \"asc\" ? tokens : tokens.reverse();\n    return (\n      <>\n        {isLoadingTokens ? (\n          <div className=\"text-center\">\n            <CircularProgress color=\"secondary\" />\n          </div>\n        ) : (\n          any(walletTokens) && (\n            <div>\n              <h1 className=\"font-bold leading-8 text-4xl text-center mb-8\">\n                <AnimatedNumber\n                  value={accountSize}\n                  formatValue={currencyFormat}\n                />\n              </h1>\n              {accountAddress && (\n                <div className=\"pb-3 overflow-auto\">\n                  <code className=\"float-left\">\n                    <small>{shorthandAddress}</small>\n                  </code>\n                  <img\n                    data-clipboard-text={accountAddress}\n                    alt=\"Copy to clipboard\"\n                    title=\"Copy to clipboard\"\n                    className=\"fill-current filter dark:invert ml-3 mt-2 cursor-pointer float-left\"\n                    id=\"copy\"\n                    src={Copy}\n                  />\n                  <Snackbar\n                    open={snackbarOpen}\n                    autoHideDuration={3000}\n                    onClose={this.handleCloseSnackbar.bind(this)}\n                  >\n                    <Alert\n                      onClose={this.handleCloseSnackbar.bind(this)}\n                      severity=\"info\"\n                    >\n                      Copied!\n                    </Alert>\n                  </Snackbar>\n                </div>\n              )}\n              <div className=\"clear-both flex flex-col\">\n                <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                  <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                    <div className=\"shadow overflow-hidden border-b border-gray-200 dark:border-gray-700 sm:rounded-lg\">\n                      <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-800\">\n                        <thead className=\"bg-gray-50 dark:bg-gray-900\">\n                          <tr>\n                            {Object.keys(columns).map((col: string) => (\n                              <th\n                                scope=\"col\"\n                                key={col}\n                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider hover:text-gray-900 dark:hover:text-gray-100\"\n                              >\n                                <span\n                                  className=\"cursor-pointer\"\n                                  onClick={(e) =>\n                                    this.sortTableBy(e.currentTarget)\n                                  }\n                                >\n                                  {col}\n                                </span>\n                              </th>\n                            ))}\n                          </tr>\n                        </thead>\n                        <tbody className=\"bg-white dark:bg-black divide-y divide-gray-200 dark:divide-gray-800\">\n                          {sortedTokens.map((token: WalletToken) => (\n                            <TokenTableRow\n                              key={`${token.symbol}-${token.network}`}\n                              token={token}\n                            />\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )\n        )}\n      </>\n    );\n  }\n}\n","// to make jest tests happy\n// https://stackoverflow.com/questions/54021037/how-to-mock-window-location-href-with-jest-vuejs\nexport function navigateTo(href: string) {\n  window.location.href = href;\n}\n","import React from \"react\";\nimport AccountCacheProvider from \"../api/providers/accountCacheProvider\";\nimport { MetaMaskProvider } from \"../api/providers/metamaskProvider\";\nimport { isChainSupported } from \"../api/util\";\nimport { navigateTo } from \"../browserUtil\";\nimport { Chain } from \"../chain\";\n\ninterface LandingProps {\n  accountCacheProvider: AccountCacheProvider;\n  metaMaskProvider: MetaMaskProvider;\n  chain: Chain;\n}\n\nexport default class Landing extends React.Component<LandingProps, any> {\n  async connectToMetaMask() {\n    const { accountCacheProvider, metaMaskProvider } = this.props;\n    const accounts = await metaMaskProvider.requestAccounts();\n    const accountAddress = accounts[0];\n    accountCacheProvider.update(accountAddress, []);\n    navigateTo(`#/address/${accountAddress}`);\n  }\n\n  render() {\n    const { metaMaskProvider, chain } = this.props;\n    const isMetaMaskInstalled = metaMaskProvider.isMetaMaskInstalled();\n    const isUnsupportedChain = isMetaMaskInstalled && !isChainSupported(chain);\n    const showConnectToMetamaskButton = isMetaMaskInstalled;\n    return (\n      <>\n        {!isMetaMaskInstalled && (\n          <p>\n            Sorry, you must first install{\" \"}\n            <a href=\"https://metamask.io/\">Metamask</a> in order to use Churras.{\" \"}\n            <br />\n            Just refresh this page once you have it installed and you'll be all\n            set.\n          </p>\n        )}\n        {showConnectToMetamaskButton && (\n          <div>\n            <p>\n              Get a detailed balance of your DeFi tokens and an account\n              overview. Click the button below to get started.\n            </p>\n            <br />\n            <button\n              onClick={this.connectToMetaMask.bind(this)}\n              className=\"text-white mt-auto bg-emerald-800 bg-opacity-50 hover:bg-opacity-75 transition-colors duration-200 rounded-xl font-semibold py-2 px-4 inline-flex\"\n            >\n              Connect to MetaMask\n            </button>\n          </div>\n        )}\n        {isUnsupportedChain && (\n          <p>\n            Sorry, the network you have currently selected in Metamask is not\n            yet supported.\n          </p>\n        )}\n      </>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/discord.f8bf84ae.svg\";","export default __webpack_public_path__ + \"static/media/github.04be58c1.svg\";","export default __webpack_public_path__ + \"static/media/logo.712e038d.svg\";","export default __webpack_public_path__ + \"static/media/twitter.9246b857.svg\";","import React from \"react\";\nimport DiscordLogo from \"../images/discord.svg\";\nimport GithubLogo from \"../images/github.svg\";\nimport Logo from \"../images/logo.svg\";\nimport TwitterLogo from \"../images/twitter.svg\";\n\nexport default class FooterComponent extends React.Component<any, any> {\n  render() {\n    return (\n      <footer className=\"footer bg-white dark:text-gray-300 dark:bg-gray-700 relative pt-1 border-b-2 border-gray-700\">\n        <div className=\"container max-w-7xl mx-auto px-6\">\n          <div className=\"sm:flex sm:mt-8\">\n            <div className=\"mt-8 sm:mt-0 sm:w-full sm:px-8 grid grid-cols-2 justify-items-start\">\n              <div>\n                <div className=\"my-2 text-5xl\">\n                  <a href=\"https://churras.org\">\n                    <img src={Logo} alt=\"Churras logo\" width=\"64\" height=\"64\" />\n                  </a>\n                </div>\n                <div className=\"my-5\">\n                  <p className=\"leading-relaxed\">\n                    Churras is your DeFi wallet dashboard. <br /> It supports\n                    both Ethereum and Binance Smart Chain. <br /> Track your\n                    account balance, tokens, yields and <br /> be your own bank.\n                  </p>\n                </div>\n                <div className=\"my-5 flex\">\n                  <a\n                    href=\"https://github.com/felipecsl/churras\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    className=\"flex mr-4\"\n                  >\n                    <img\n                      src={GithubLogo}\n                      alt=\"Churras Github\"\n                      className=\"fill-current filter dark:invert\"\n                    />\n                  </a>\n                  <a\n                    href=\"https://twitter.com/churras_org\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    className=\"flex mr-4\"\n                  >\n                    <img\n                      src={TwitterLogo}\n                      alt=\"Churras Twitter\"\n                      className=\"fill-current filter dark:invert\"\n                    />\n                  </a>\n                  <a\n                    href=\"https://discord.gg/gqvNGw25XF\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    className=\"flex mr-4\"\n                  >\n                    <img\n                      src={DiscordLogo}\n                      alt=\"Churras Discord\"\n                      className=\"fill-current filter dark:invert\"\n                    />\n                  </a>\n                </div>\n              </div>\n              <div>\n                <div className=\"font-bold text-gray-900 dark:text-gray-200 uppercase my-8\">\n                  About\n                </div>\n                <div className=\"my-4\">\n                  <a href=\"https://docs.churras.org/\" className=\"text-md\">\n                    Documentation\n                  </a>\n                </div>\n                <div className=\"my-4\">\n                  <a\n                    href=\"https://github.com/felipecsl/churras\"\n                    className=\"text-md\"\n                  >\n                    Source Code\n                  </a>\n                </div>\n                <div className=\"my-4\">\n                  <a href=\"mailto:felipe.lima@gmail.com\" className=\"text-md\">\n                    Contact\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container mx-auto px-6\">\n          <div className=\"mt-16 border-t-2 border-gray-200 dark:border-gray-600 flex flex-col items-center\">\n            <div className=\"sm:w-2/3 text-center py-6\">\n              <p className=\"text-sm font-bold mb-2\">\n                Built with ☕️ by{\" \"}\n                <a className=\"underline\" href=\"https://felipecsl.com\">\n                  Felipe Lima\n                </a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n","import React, { RefObject } from \"react\";\n\nexport default class ThemeSelector extends React.Component<any, any> {\n  private darkModeToggle: RefObject<SVGSVGElement>;\n  private lightModeToggle: RefObject<SVGSVGElement>;\n\n  constructor(props: any) {\n    super(props);\n    this.darkModeToggle = React.createRef();\n    this.lightModeToggle = React.createRef();\n  }\n\n  toggleOption() {\n    this.updateClassList();\n  }\n\n  private isSetToDarkMode(): boolean {\n    return (\n      localStorage.theme === \"dark\" ||\n      (!(\"theme\" in localStorage) &&\n        window.matchMedia(\"(prefers-color-scheme: dark)\")?.matches)\n    );\n  }\n\n  private updateClassList() {\n    const darkModeToggle = this.darkModeToggle.current?.classList;\n    const lightModeToggle = this.lightModeToggle.current?.classList;\n    const isCurrentlySetToDarkMode = darkModeToggle?.contains(\"on\");\n    if (isCurrentlySetToDarkMode) {\n      darkModeToggle?.add(\"off\");\n      darkModeToggle?.remove(\"on\");\n      lightModeToggle?.add(\"on\");\n      lightModeToggle?.remove(\"off\");\n      localStorage.theme = \"light\";\n      document.documentElement.classList.remove(\"dark\");\n    } else {\n      darkModeToggle?.add(\"on\");\n      darkModeToggle?.remove(\"off\");\n      lightModeToggle?.add(\"off\");\n      lightModeToggle?.remove(\"on\");\n      localStorage.theme = \"dark\";\n      document.documentElement.classList.add(\"dark\");\n    }\n  }\n\n  componentDidMount() {\n    if (this.isSetToDarkMode()) {\n      document.documentElement.classList.add(\"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n    }\n  }\n\n  render() {\n    const isSetToDarkMode = this.isSetToDarkMode();\n    return (\n      <div className=\"themeselector-wrapper\">\n        <svg\n          viewBox=\"0 0 24 24\"\n          color=\"textDisabled\"\n          width=\"24px\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={`cursor-pointer ${isSetToDarkMode ? \"off\" : \"on\"}`}\n          ref={this.lightModeToggle}\n          onClick={this.toggleOption.bind(this)}\n        >\n          <path d=\"M5.66 4.2L6.05 4.59C6.44 4.97 6.44 5.61 6.05 5.99L6.04 6C5.65 6.39 5.03 6.39 4.64 6L4.25 5.61C3.86 5.23 3.86 4.6 4.25 4.21L4.26 4.2C4.64 3.82 5.27 3.81 5.66 4.2Z\"></path>\n          <path d=\"M1.99 10.95H3.01C3.56 10.95 4 11.39 4 11.95V11.96C4 12.51 3.56 12.95 3 12.94H1.99C1.44 12.94 1 12.5 1 11.95V11.94C1 11.39 1.44 10.95 1.99 10.95Z\"></path>\n          <path d=\"M12 1H12.01C12.56 1 13 1.44 13 1.99V2.96C13 3.51 12.56 3.95 12 3.94H11.99C11.44 3.94 11 3.5 11 2.95V1.99C11 1.44 11.44 1 12 1Z\"></path>\n          <path d=\"M18.34 4.2C18.73 3.82 19.36 3.82 19.75 4.21C20.14 4.6 20.14 5.22 19.75 5.61L19.36 6C18.98 6.39 18.35 6.39 17.96 6L17.95 5.99C17.56 5.61 17.56 4.98 17.95 4.59L18.34 4.2Z\"></path>\n          <path d=\"M18.33 19.7L17.94 19.31C17.55 18.92 17.55 18.3 17.95 17.9C18.33 17.52 18.96 17.51 19.35 17.9L19.74 18.29C20.13 18.68 20.13 19.31 19.74 19.7C19.35 20.09 18.72 20.09 18.33 19.7Z\"></path>\n          <path d=\"M20 11.95V11.94C20 11.39 20.44 10.95 20.99 10.95H22C22.55 10.95 22.99 11.39 22.99 11.94V11.95C22.99 12.5 22.55 12.94 22 12.94H20.99C20.44 12.94 20 12.5 20 11.95Z\"></path>\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M6 11.95C6 8.64 8.69 5.95 12 5.95C15.31 5.95 18 8.64 18 11.95C18 15.26 15.31 17.95 12 17.95C8.69 17.95 6 15.26 6 11.95ZM12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16Z\"\n          ></path>\n          <path d=\"M12 22.9H11.99C11.44 22.9 11 22.46 11 21.91V20.95C11 20.4 11.44 19.96 11.99 19.96H12C12.55 19.96 12.99 20.4 12.99 20.95V21.91C12.99 22.46 12.55 22.9 12 22.9Z\"></path>\n          <path d=\"M5.66 19.69C5.27 20.08 4.64 20.08 4.25 19.69C3.86 19.3 3.86 18.68 4.24 18.28L4.63 17.89C5.02 17.5 5.65 17.5 6.04 17.89L6.05 17.9C6.43 18.28 6.44 18.91 6.05 19.3L5.66 19.69Z\"></path>\n        </svg>\n        <div color=\"textDisabled\" className=\"divider\">\n          /\n        </div>\n        <svg\n          viewBox=\"0 0 24 24\"\n          color=\"text\"\n          width=\"24px\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={`cursor-pointer ${isSetToDarkMode ? \"on\" : \"off\"}`}\n          ref={this.darkModeToggle}\n          onClick={this.toggleOption.bind(this)}\n        >\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M4.1534 13.6089L4.15362 13.61C4.77322 16.8113 7.42207 19.3677 10.647 19.8853L10.6502 19.8858C13.0412 20.2736 15.2625 19.6103 16.9422 18.2833C11.3549 16.2878 7.9748 10.3524 9.26266 4.48816C5.69846 5.77194 3.35817 9.51245 4.1534 13.6089ZM10.0083 2.21054C4.76622 3.2533 1.09895 8.36947 2.19006 13.9901C2.97006 18.0201 6.28006 21.2101 10.3301 21.8601C13.8512 22.4311 17.0955 21.1608 19.2662 18.8587C19.2765 18.8478 19.2866 18.837 19.2968 18.8261C19.4385 18.6745 19.5757 18.5184 19.7079 18.3581C19.7105 18.355 19.713 18.3519 19.7156 18.3487C19.8853 18.1426 20.0469 17.9295 20.2001 17.7101C20.4101 17.4001 20.2401 16.9601 19.8701 16.9201C19.5114 16.8796 19.1602 16.8209 18.817 16.7452C18.7964 16.7406 18.7758 16.736 18.7552 16.7313C18.6676 16.7114 18.5804 16.6903 18.4938 16.6681C18.4919 16.6676 18.4901 16.6672 18.4882 16.6667C13.0234 15.2647 9.72516 9.48006 11.4542 4.03417C11.4549 4.03214 11.4555 4.03012 11.4562 4.0281C11.4875 3.92954 11.5205 3.83109 11.5552 3.73278C11.5565 3.72911 11.5578 3.72543 11.5591 3.72175C11.6768 3.38921 11.8136 3.05829 11.9701 2.73005C12.1301 2.39005 11.8501 2.01005 11.4701 2.03005C11.1954 2.04379 10.924 2.06848 10.6561 2.10368C10.6517 2.10427 10.6472 2.10486 10.6428 2.10545C10.4413 2.13221 10.2418 2.16492 10.0446 2.2034C10.0325 2.20576 10.0204 2.20814 10.0083 2.21054Z\"\n          ></path>\n        </svg>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ThemeSelector from \"./themeSelector\";\nimport Logo from \"../images/logo.svg\";\n\nexport default class NavigationComponent extends React.Component<any, any> {\n  render() {\n    return (\n      <nav className=\"bg-gray-800 dark:bg-gray-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0 text-4xl\">\n                <a href=\"https://churras.org\">\n                  <img src={Logo} alt=\"Churras logo\" width=\"64\" height=\"64\" />\n                </a>\n              </div>\n              <div className=\"hidden md:block\">\n                <div className=\"ml-10 flex items-start space-x-4\">\n                  <a\n                    href=\"/\"\n                    className=\"bg-gray-900 text-white px-3 py-3 rounded-md text-sm font-medium\"\n                  >\n                    Dashboard\n                  </a>\n                </div>\n              </div>\n            </div>\n            <div className=\"hidden md:block\">\n              <div className=\"ml-4 flex items-center md:ml-6\">\n                <ThemeSelector />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"md:hidden\" id=\"mobile-menu\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">\n            <a\n              href=\"/\"\n              className=\"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\"\n            >\n              Dashboard\n            </a>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n","import { WalletToken } from \"../token/walletToken\";\nimport { any } from \"../util\";\n\nexport default class AccountCacheProvider {\n  private readonly storage: Storage;\n\n  constructor(storage: Storage = localStorage) {\n    this.storage = storage;\n  }\n\n  private getCache() {\n    return JSON.parse(this.storage.churrasCache || \"{}\");\n  }\n\n  /** Returns the first cached address found or undefined if none exist */\n  getSingleAccountAddress(): string | undefined {\n    const churrasCache = this.getCache();\n    const addresses = Object.keys(churrasCache);\n    if (any(addresses)) {\n      return addresses[0];\n    } else {\n      return undefined;\n    }\n  }\n\n  /** Returns the cached tokens array for the provided address or empty array if account not found */\n  get(address: string): WalletToken[] {\n    const churrasCache = this.getCache();\n    return churrasCache[address] || [];\n  }\n\n  update(address: string, tokens: WalletToken[]) {\n    const churrasCache = this.getCache();\n    churrasCache[address] = tokens;\n    this.storage.churrasCache = JSON.stringify(churrasCache);\n  }\n\n  clear() {\n    delete this.storage.churrasCache;\n  }\n}\n","import { ChainId } from \"@uniswap/sdk\";\nimport { Chain } from \"../../chain\";\n\nexport interface MetaMaskProvider {\n  requestAccounts(): Promise<string[]>;\n  isMetaMaskInstalled(): boolean;\n  chainId(): Promise<Chain>;\n}\n\nexport default class DefaultMetaMaskProvider implements MetaMaskProvider {\n  async requestAccounts(): Promise<string[]> {\n    return await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n  }\n\n  isMetaMaskInstalled(): boolean {\n    return typeof window.ethereum !== \"undefined\";\n  }\n\n  async chainId(): Promise<Chain> {\n    if (!this.isMetaMaskInstalled()) {\n      return Chain.UNKNOWN;\n    }\n    const chainId = await window.ethereum.request({ method: \"eth_chainId\" });\n    switch (parseInt(chainId)) {\n      case ChainId.MAINNET:\n        return Chain.ETHEREUM_MAINNET;\n      case ChainId.ROPSTEN:\n      case ChainId.RINKEBY:\n      case ChainId.GÖRLI:\n      case ChainId.KOVAN:\n        return Chain.ETHEREUM_TESTNET;\n      case 56:\n        return Chain.BSC_MAINNET;\n      case 97:\n        return Chain.BSC_TESTNET;\n      default:\n        return Chain.UNKNOWN;\n    }\n  }\n\n  static isEthereum(chain: number): boolean {\n    return [Chain.ETHEREUM_MAINNET, Chain.ETHEREUM_TESTNET].includes(chain);\n  }\n}\n","import { WalletToken } from \"./api/token/walletToken\";\nimport { ensure, fetchJson } from \"./api/util\";\nimport { DEV_API_PORT } from \"./constants\";\n\nexport interface ChurrasApiClient {\n  accountTokens(accountAddress: string): Promise<WalletToken[]>;\n}\n\nexport default class DefaultChurrasApiClient {\n  private readonly apiBaseUrl: string;\n\n  constructor(location: Location = window.location) {\n    const hostname = location.hostname;\n    ensure(\n      () => [\"localhost\", \"churras.org\"].includes(hostname),\n      `Unknown hostname ${hostname}`\n    );\n    const environment =\n      hostname === \"churras.org\" ? \"production\" : \"development\";\n    const API_PORT = environment === \"production\" ? 80 : DEV_API_PORT;\n    const protocol = location.protocol;\n    this.apiBaseUrl = `${protocol}//${hostname}:${API_PORT}`;\n  }\n\n  async accountTokens(accountAddress: string): Promise<WalletToken[]> {\n    const endpoint = `${this.apiBaseUrl}/address/${accountAddress}/tokens`;\n    return await fetchJson(endpoint);\n  }\n}\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Chain } from \"./chain\";\nimport AccountDetails from \"./components/accountDetails\";\nimport Landing from \"./components/landing\";\nimport FooterComponent from \"./components/footerComponent\";\nimport NavigationComponent from \"./components/navigationComponent\";\nimport AccountCacheProvider from \"./api/providers/accountCacheProvider\";\nimport DefaultMetaMaskProvider, {\n  MetaMaskProvider,\n} from \"./api/providers/metamaskProvider\";\nimport { navigateTo } from \"./browserUtil\";\nimport DefaultChurrasApiClient from \"./churrasapiClient\";\n\ninterface AppState {\n  chain: number;\n}\n\ninterface AppProps {\n  accountCacheProvider: AccountCacheProvider;\n  metaMaskProvider: MetaMaskProvider;\n}\n\ndeclare global {\n  interface Window {\n    ethereum: any;\n  }\n}\n\nclass App extends React.Component<AppProps, AppState> {\n  public static defaultProps = {\n    accountCacheProvider: new AccountCacheProvider(),\n    metaMaskProvider: new DefaultMetaMaskProvider(),\n  };\n\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      chain: Chain.ETHEREUM_MAINNET,\n    };\n  }\n\n  /*async loadAccountTransactions() {\n    const accountAddress = this.ensureAccountAddress();\n    if (accountAddress) {\n      const transactionsLoader = new TransactionsLoader(\n        new RealEtherscanApiClient()\n      );\n      const uniswapTransactionParser = new UniswapTransactionParser(\n        TOKENS_BY_NETWORK[this.state.chain],\n        DEFAULT_ETHEREUM_PROVIDER\n      );\n      const accountSwaps = new AccountSwaps(\n        transactionsLoader,\n        uniswapTransactionParser\n      );\n      console.log(await accountSwaps.loadAccountSwaps(accountAddress));\n    }\n  }*/\n\n  async componentDidMount() {\n    const chain = await this.props.metaMaskProvider.chainId();\n    this.setState({ chain }, async () => {\n      const { accountCacheProvider } = this.props;\n      // Register this as a callback after setState() finished because loadBalances() relies on\n      // this state that we just set above.\n      const accountAddress = accountCacheProvider.getSingleAccountAddress();\n      if ([\"\", \"#/\"].includes(window.location.hash) && accountAddress) {\n        navigateTo(`#/address/${accountAddress}`);\n      }\n    });\n  }\n\n  render() {\n    const { accountCacheProvider, metaMaskProvider } = this.props;\n    const { chain } = this.state;\n    return (\n      <React.StrictMode>\n        <Router>\n          <div className=\"flex flex-col h-screen justify-between\">\n            <NavigationComponent />\n            <header className=\"bg-white dark:bg-gray-800 shadow\">\n              <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                <h1 className=\"text-3xl font-bold text-gray-900 dark:text-gray-300\">\n                  Dashboard\n                </h1>\n              </div>\n            </header>\n            <main className=\"mb-auto\">\n              <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n                <div className=\"py-8 text-base leading-6 space-y-4 text-gray-700 dark:text-gray-300 sm:text-lg sm:leading-7\">\n                  <Switch>\n                    <Route\n                      path=\"/address/:accountAddress\"\n                      render={(props) => (\n                        <AccountDetails\n                          apiClient={new DefaultChurrasApiClient()}\n                          metaMaskProvider={metaMaskProvider}\n                          accountCacheProvider={accountCacheProvider}\n                          route={props}\n                          chain={chain}\n                        />\n                      )}\n                    />\n                    <Route\n                      path=\"/\"\n                      render={(props) => (\n                        <Landing\n                          accountCacheProvider={accountCacheProvider}\n                          metaMaskProvider={metaMaskProvider}\n                          chain={chain}\n                        />\n                      )}\n                    />\n                  </Switch>\n                </div>\n              </div>\n            </main>\n            <FooterComponent />\n          </div>\n        </Router>\n      </React.StrictMode>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}