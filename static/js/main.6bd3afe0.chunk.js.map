{"version":3,"sources":["humanStandardTokenABI.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["humanStandardTokenABI","constant","inputs","name","outputs","type","payable","anonymous","indexed","App","props","state","web3","undefined","accountAddress","isLoaded","allTokens","tokenBalances","tokenPrices","window","ethereum","balance","this","utils","fromWei","fetchEthPrice","symbol","address","decimals","logoURI","setState","console","error","token","tokenBalance","fetchTokenPrices","tokenContractAddress","tokenPromise","eth","Contract","methods","balanceOf","call","updateTokenBalance","request","method","accounts","Web3","getBalance","then","updateEthBalance","bind","Object","values","forEach","fetchTokenBalance","tokenAddress","find","t","fetch","res","json","results","tokenAddresses","addressList","join","apiUrl","entries","priceObj","findTokenByAddress","price","tokens","i","array","reduce","acc","tokenPrice","positionSizeUSD","currencyFormat","format","amountFormat","className","accountSize","determineUSDAccountSize","sortedTokens","sort","a","b","nameA","nameB","isMetamaskInstalled","onClick","connectToMetaMask","length","map","renderTokenBalance","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bd3afe0.chunk.js","sourcesContent":["const humanStandardTokenABI = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        name: \"success\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        name: \"success\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"success\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n      },\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"remaining\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"_spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        name: \"_initialAmount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_tokenName\",\n        type: \"string\",\n      },\n      {\n        name: \"_decimalUnits\",\n        type: \"uint8\",\n      },\n      {\n        name: \"_tokenSymbol\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    type: \"constructor\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_extraData\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"approveAndCall\",\n    outputs: [\n      {\n        name: \"success\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"version\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    type: \"function\",\n  },\n];\nexport default humanStandardTokenABI;\n","import React from \"react\";\nimport Web3 from \"web3\";\nimport humanStandardTokenABI from \"./humanStandardTokenABI\";\nimport { format } from \"d3-format\";\nimport \"./App.css\";\n\ninterface Token {\n  symbol: string;\n  name: string;\n  address: string;\n  decimals: number;\n  logoURI: string;\n}\n\ninterface AppState {\n  web3?: Web3;\n  accountAddress?: string;\n  isLoaded: boolean;\n  // keys are the token names\n  allTokens: Record<string, Token>;\n  tokenBalances: Record<string, string>;\n  tokenPrices: Record<string, string>;\n}\n\ndeclare global {\n  interface Window {\n    ethereum: any;\n  }\n}\n\nconst TOKEN_LIST_API_ENDPOINT = \"https://api.1inch.exchange/v2.0/tokens\";\nconst ETH_PRICE_API_ENDPOINT =\n  \"https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd\";\n\nclass App extends React.Component<any, AppState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      web3: undefined,\n      accountAddress: undefined,\n      isLoaded: false,\n      allTokens: {},\n      tokenBalances: {},\n      tokenPrices: {},\n    };\n  }\n\n  isMetamaskInstalled() {\n    return typeof window.ethereum !== \"undefined\";\n  }\n\n  async updateEthBalance(balance: any) {\n    if (this.state.web3) {\n      const { tokenPrices, tokenBalances, allTokens } = this.state;\n      tokenBalances[\"ETH\"] = this.state.web3.utils.fromWei(balance);\n      tokenPrices[\"ETH\"] = await this.fetchEthPrice();\n      allTokens[\"ETH\"] = {\n        symbol: \"ETH\",\n        name: \"Ehereum\",\n        address: \"\",\n        decimals: 18,\n        logoURI: \"\",\n      };\n      this.setState({ tokenPrices, tokenBalances, allTokens });\n    } else {\n      console.error(\"web3 is not yet initialized\");\n    }\n  }\n\n  updateTokenBalance(token: string, balance: any) {\n    if (this.state.web3) {\n      const tokenBalance = this.state.web3.utils.fromWei(balance);\n      if (+tokenBalance > 0) {\n        const { tokenBalances, allTokens } = this.state;\n        tokenBalances[token] = tokenBalance;\n        // TODO: Batch these one-off calls into a single API call with all tokens with balance > 0\n        this.fetchTokenPrices([allTokens[token].address]);\n        this.setState({ tokenBalances });\n      }\n    } else {\n      console.error(\"web3 is not yet initialized\");\n    }\n  }\n\n  async fetchTokenBalance(web3: Web3, token: Token) {\n    const { accountAddress } = this.state;\n    const tokenContractAddress = token.address;\n    const tokenPromise = new web3.eth.Contract(\n      humanStandardTokenABI as any,\n      tokenContractAddress\n    );\n    const balance = await tokenPromise.methods.balanceOf(accountAddress).call();\n    this.updateTokenBalance(token.symbol, balance);\n  }\n\n  async connectToMetaMask() {\n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    const accountAddress = accounts[0];\n    const web3 = new Web3(window.ethereum);\n    this.setState({ web3, accountAddress });\n    web3.eth.getBalance(accountAddress).then(this.updateEthBalance.bind(this));\n    Object.values(this.state.allTokens).forEach((token: Token) => {\n      this.fetchTokenBalance(web3, token);\n    });\n  }\n\n  findTokenByAddress(tokenAddress: string): Token | undefined {\n    const { allTokens } = this.state;\n    return Object.values(allTokens).find(\n      (t: Token) => t.address === tokenAddress\n    );\n  }\n\n  async fetchEthPrice(): Promise<string> {\n    const res = await fetch(ETH_PRICE_API_ENDPOINT);\n    const results = await res.json();\n    return results[\"ethereum\"][\"usd\"];\n  }\n\n  async fetchTokenPrices(tokenAddresses: Array<string>) {\n    const addressList = tokenAddresses.join(\",\");\n    const apiUrl = `https://api.coingecko.com/api/v3/simple/token_price/ethereum?contract_addresses=${addressList}&vs_currencies=usd`;\n    const res = await fetch(apiUrl);\n    const results = await res.json();\n    Object.entries(results).forEach(\n      ([tokenAddress, priceObj]: [string, any]) => {\n        const token = this.findTokenByAddress(tokenAddress);\n        if (token) {\n          const price = priceObj[\"usd\"];\n          const { tokenPrices } = this.state;\n          tokenPrices[token.symbol] = price;\n          this.setState({ tokenPrices });\n        } else {\n          console.error(`Unable to find token with address ${tokenAddress}`);\n        }\n      }\n    );\n  }\n\n  async componentDidMount() {\n    const res = await fetch(TOKEN_LIST_API_ENDPOINT);\n    const results = (await res.json()) as any;\n    const allTokens = {} as Record<string, Token>;\n    Object.values(results.tokens).forEach(\n      (token: any, i: number, array: any) => {\n        allTokens[token.symbol] = token as Token;\n      }\n    );\n    this.setState({\n      isLoaded: true,\n      allTokens: allTokens,\n    });\n  }\n\n  /** Returns the amount of tokens held for the provided `symbol` */\n  tokenBalance(symbol: string): number {\n    const { tokenBalances } = this.state;\n    return +tokenBalances[symbol];\n  }\n\n  /** Returns the current USD price for the provided `symbol` */\n  tokenPrice(symbol: string): number {\n    const { tokenPrices } = this.state;\n    return +tokenPrices[symbol];\n  }\n\n  /* Returns the total account size in USD */\n  determineUSDAccountSize(): number {\n    const { tokenBalances, tokenPrices } = this.state;\n    return Object.entries(tokenBalances).reduce(\n      (acc: number, [symbol, balance]: [string, string]) => {\n        return acc + +tokenPrices[symbol] * +balance;\n      },\n      0\n    );\n  }\n\n  renderTokenBalance(token: Token) {\n    const symbol = token.symbol;\n    const price = this.tokenPrice(symbol);\n    const balance = this.tokenBalance(symbol);\n    const positionSizeUSD = price * balance;\n    const currencyFormat = format(\"$,.2f\");\n    const amountFormat = format(\".2f\");\n    if (balance) {\n      return (\n        <tr key={symbol}>\n          <td className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n            {symbol}\n          </td>\n          <td className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n            {amountFormat(balance)}\n          </td>\n          <td className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n            {currencyFormat(price)}\n          </td>\n          <td className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n            {currencyFormat(positionSizeUSD)}\n          </td>\n        </tr>\n      );\n    }\n  }\n\n  render() {\n    if (!this.state) {\n      return <div>Loading...</div>;\n    }\n    const { allTokens, accountAddress, tokenBalances } = this.state;\n    const currencyFormat = format(\"$,.2f\");\n    const accountSize = this.determineUSDAccountSize();\n    const sortedTokens = Object.values(allTokens);\n    sortedTokens.sort((a, b) => {\n      var nameA = a.symbol;\n      var nameB = b.symbol;\n      if (nameA < nameB) {\n        return -1;\n      } else if (nameA > nameB) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    return (\n      <div className=\"min-h-screen bg-gray-100 py-6 flex flex-col justify-center sm:py-12\">\n        <div className=\"relative py-3 sm:max-w-xl sm:mx-auto\">\n          <div className=\"absolute inset-0 bg-gradient-to-r from-cyan-400 to-light-blue-500 shadow-lg transform -skew-y-6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl\"></div>\n          <div className=\"relative px-4 py-10 bg-white shadow-lg sm:rounded-3xl sm:p-20\">\n            <div className=\"max-w-md mx-auto\">\n              <div className=\"divide-y divide-gray-200\">\n                <div className=\"py-8 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  <h1 className=\"text-3xl font-extrabold text-gray-900 tracking-tight\">\n                    Deephy\n                  </h1>\n                  <p>\n                    Get a detailed balance of your DeFi tokens and an account\n                    overview. Click the button below to get started.\n                  </p>\n                  {this.isMetamaskInstalled() && !this.state.web3 && (\n                    <button\n                      onClick={this.connectToMetaMask.bind(this)}\n                      className=\"text-white mt-auto bg-emerald-800 bg-opacity-50 hover:bg-opacity-75 transition-colors duration-200 rounded-xl font-semibold py-2 px-4 inline-flex\"\n                    >\n                      Connect to MetaMask\n                    </button>\n                  )}\n                  {accountAddress && (\n                    <p>\n                      Address:\n                      <br />\n                      <code>\n                        <small>{accountAddress}</small>\n                      </code>\n                    </p>\n                  )}\n                  {accountSize > 0 && (\n                    <p className=\"font-semibold text-2xl pb-3\">\n                      {currencyFormat(accountSize)}\n                    </p>\n                  )}\n                  {Object.values(tokenBalances).length > 0 && (\n                    <div>\n                      <table className=\"table-auto\">\n                        <thead className=\"bg-indigo-200\">\n                          <tr>\n                            <th className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n                              Token\n                            </th>\n                            <th className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n                              Amount\n                            </th>\n                            <th className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n                              Current price\n                            </th>\n                            <th className=\"border border-light-blue-500 px-4 py-2 text-light-blue-600 font-medium\">\n                              Equity\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {sortedTokens.map(this.renderTokenBalance.bind(this))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}